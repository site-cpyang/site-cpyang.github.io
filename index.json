
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Chao Peter Yang is a Master’s student in Interdisciplinary Data Science at Duke University and a Data Scientist Intern at Amazon Robotics. He graduated with Highest Honors in Data Science from the University of Michigan and previously worked as a Senior Data Science Analyst at Curinos, Inc. At Duke’s Interpretable Machine Learning Lab, advised by Prof. Cynthia Rudin and Dr. Stephen Ni-Hahn, he conducts research on symbolic music generation and graph neural networks, with an emphasis on interpretability and generative modeling. His broader interests include agentic AI systems, large models, and applied machine learning, with the goal of bridging theory and practice to create both scientific and real-world impact.\n","date":1756684800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1756684800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Chao Peter Yang is a Master’s student in Interdisciplinary Data Science at Duke University and a Data Scientist Intern at Amazon Robotics. He graduated with Highest Honors in Data Science from the University of Michigan and previously worked as a Senior Data Science Analyst at Curinos, Inc.","tags":null,"title":"Chao Péter Yang","type":"authors"},{"authors":["Stephen Ni-Hahn","Chao Péter Yang","Mingchen Ma","Cynthia Rudin","Simon Mak","Yue Jiang"],"categories":null,"content":"","date":1756684800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1756684800,"objectID":"9a02ceeb0922dc80b4152fc37ed9ced0","permalink":"https://site-cpyang.github.io/publication/progress/","publishdate":"2025-09-01T00:00:00Z","relpermalink":"/publication/progress/","section":"publication","summary":"Introduces ProGress, a hybrid symbolic music generation model combining graph diffusion and Schenkerian analysis for interpretable, structured, and musically coherent outputs. Accepted at NeurIPS 2025 (Creative AI Track).\n","tags":["Symbolic Music Generation","Diffusion Models","Graph Neural Networks","Interpretability","Schenkerian Analysis"],"title":"ProGress: Structured Music Generation via Graph Diffusion and Hierarchical Music Analysis","type":"publication"},{"authors":null,"categories":null,"content":"SanAssist is an innovative web application that empowers healthcare professionals with seamless data analysis and natural language querying. The platform combines interactive dashboards built with the Squirrels library and a fine-tuned GPT-2 model (via LoRA) to deliver context-aware insights from patient datasets.\nThe system includes a complete ETL pipeline (Databricks + Pandas) for data ingestion, transformation, and storage, connected to a lightweight Python microservice. Healthcare professionals can upload datasets, explore interactive charts and tables, and query the integrated chatbot for insights like “Which patients are at the highest risk for sepsis?”.\nSanAssist is fully containerized with Docker, deployed on AWS Elastic Container Registry (ECR) and App Runner, and automated via GitHub Actions CI/CD pipelines. Load tests with 10,000 concurrent users confirmed scalability, with peak throughput of 602 RPS. The fine-tuned model achieved a perplexity score of 3.32, outperforming general-purpose medical LLMs such as Med-PaLM in domain-specific accuracy.\nWith a robust data pipeline, secure deployment, and intuitive interface, SanAssist demonstrates how LLMs can transform healthcare analytics, bridging the gap between raw data and actionable clinical insights.\n","date":1715472000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1715472000,"objectID":"373b2846083e91137f9066ddc28e1f07","permalink":"https://site-cpyang.github.io/project/sanassist/","publishdate":"2024-05-12T00:00:00Z","relpermalink":"/project/sanassist/","section":"project","summary":"A healthcare data dashboard integrated with a fine-tuned LLM-powered chatbot, enabling dynamic querying, interactive visualizations, and scalable cloud deployment.","tags":["Healthcare","LLM","Data Engineering","Dashboard","AWS","Docker","CI/CD"],"title":"SanAssist: LLM-Powered Healthcare Data Dashboard","type":"project"},{"authors":null,"categories":null,"content":"Duke ProfMatch is an AI-powered platform designed to connect students with professors whose research aligns with their interests. Inspired by the difficulty students face in identifying potential collaborators, the tool uses natural language queries to return curated lists of professors along with details on their research, publications, and contact information.\nBuilt with Graph Retrieval-Augmented Generation (Graph RAG), Neo4j, and OpenAI models, ProfMatch features a visual graph of Duke’s academic network, allowing users to explore connections across departments, schools, and research areas. The system was created by transforming Scholars@Duke data into a graph database, integrating prompt-engineered retrieval pipelines, and deploying a Streamlit frontend.\nProfMatch makes academic networking more accessible and engaging, with future plans to expand to other universities and add advanced features such as keyword alerts, collaboration suggestions, and improved AI-driven matching.\n","date":1708214400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1708214400,"objectID":"ccb5c22f750c90957f2de712172aba75","permalink":"https://site-cpyang.github.io/project/profmatch/","publishdate":"2024-02-18T00:00:00Z","relpermalink":"/project/profmatch/","section":"project","summary":"An AI-powered platform that helps Duke students find professors whose research aligns with their interests, using natural language queries and graph-based exploration.","tags":["Graph RAG","Academic Networking","Neo4j","OpenAI","Streamlit","LLM"],"title":"Duke ProfMatch: AI-Powered Research Collaboration Tool","type":"project"},{"authors":null,"categories":null,"content":"The Muscribe research project is a joint effort between me and Yifan Zhao, PhD candidate at UIUC, to create a model that is capable of transcribing pieces of music to musical scores.\n","date":1690416000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1690416000,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://site-cpyang.github.io/project/example/","publishdate":"2023-07-27T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"A research project into developing a model that can create scores from pieces of music.","tags":["Deep Learning"],"title":"Muscribe: Transcribing Music to Scores","type":"project"},{"authors":null,"categories":null,"content":"","date":1682553600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682553600,"objectID":"012a9df0d247bce7b0f10fe5f2b11327","permalink":"https://site-cpyang.github.io/project/eda-project/","publishdate":"2023-04-27T00:00:00Z","relpermalink":"/project/eda-project/","section":"project","summary":"Performed EDA and a simple XGBoost to predict house prices in California in a single Jupiter notebook. This is simple data project to showcase how I'd approach a relatively straight forward modeling task.","tags":["API"],"title":"Californian House Price Prediction with Kaggle Data","type":"project"},{"authors":null,"categories":null,"content":"","date":1682553600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682553600,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://site-cpyang.github.io/project/external-project/","publishdate":"2023-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"Developing use cases and documentation for the Squirrels API","tags":["API"],"title":"Squirrels API - Use Case Development and Documentation","type":"project"},{"authors":["Chao Péter Yang"],"categories":null,"content":"","date":1617235200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1617235200,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://site-cpyang.github.io/publication/journal-article/","publishdate":"2021-05-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Amidst the rise of audio media subscription services, the demand for automated Music Information Retrieval (MIR) and musical classification grows. Traditional methods, like the Mel-Frequency Cepstral Coefficients (MFCC), focus on low-level sound details. This study turns to Musical Instrument Digital Interface (MIDI) files to tap into mid-level musical nuances. Using MATLAB’s MIDI-Tools package, we aimed to classify between Classical and Romantic music using Support Vector Machines (SVMs) and Long Short Term Memory (LSTM) networks. Despite achieving 82% accuracy with LSTM and 72% with SVM, the model's extensibility to more categories remains unproven. Incorporating advancements from Convolutional Neural Networks might enhance the model. A fusion of MIDI-based mid-level details with sound spectrum analysis and SVMs could further improve future classifiers.","tags":["Source Themes"],"title":"The Classical-Romantic Dichotomy: A Machine Learning Approach","type":"publication"},{"authors":["Chao Péter Yang","吳恩達"],"categories":["Demo","教程"],"content":"import libr print(\u0026#39;hello\u0026#39;) Overview The Wowchemy website builder for Hugo, along with its starter templates, is designed for professional creators, educators, and teams/organizations - although it can be used to create any kind of site The template can be modified and customised to suit your needs. It’s a good platform for anyone looking to take control of their data and online identity whilst having the convenience to start off with a no-code solution (write in Markdown and customize with YAML parameters) and having flexibility to later add even deeper personalization with HTML and CSS You can work with all your favourite tools and apps with hundreds of plugins and integrations to speed up your workflows, interact with your readers, and much more Get Started 👉 Create a new site 📚 Personalize your site 💬 Chat with the Wowchemy community or Hugo community 🐦 Twitter: @wowchemy @GeorgeCushen #MadeWithWowchemy 💡 Request a feature or report a bug for Wowchemy ⬆️ Updating Wowchemy? View the Update Tutorial and Release Notes Crowd-funded open-source software To help us develop this template and software sustainably under the MIT license, we ask all individuals and businesses that use it to help support its ongoing maintenance and development via sponsorship.\n❤️ Click here to become a sponsor and help support Wowchemy’s future ❤️ As a token of appreciation for sponsoring, you can unlock these awesome rewards and extra features 🦄✨\nEcosystem Hugo Academic CLI: Automatically import publications from BibTeX Inspiration Check out the latest demo of what you’ll get in less than 10 minutes, or view the showcase of personal, project, and business sites.\nFeatures Page builder - Create anything with widgets and elements Edit any type of content - Blog posts, publications, talks, slides, projects, and more! Create content in Markdown, Jupyter, or RStudio Plugin System - Fully customizable color and font themes Display Code and Math - Code highlighting and LaTeX math supported Integrations - Google Analytics, Disqus commenting, Maps, Contact Forms, and more! Beautiful Site - Simple and refreshing one page design Industry-Leading SEO - Help get your website found on search engines and social media Media Galleries - Display your images and videos with captions in a customizable gallery Mobile Friendly - Look amazing on every screen with a mobile friendly version of your site Multi-language - 34+ language packs including English, 中文, and Português Multi-user - Each author gets their own profile page Privacy Pack - Assists with GDPR Stand Out - Bring your site to life with animation, parallax backgrounds, and scroll effects One-Click Deployment - No servers. No databases. Only files. Themes Wowchemy and its templates come with automatic day (light) and night (dark) mode built-in. Alternatively, visitors can choose their preferred mode - click the moon icon in the top right of the Demo to see it in action! Day/night mode can also be disabled by the site admin in params.toml.\nChoose a stunning theme and font for your site. Themes are fully customizable.\nLicense Copyright 2016-present George Cushen.\nReleased under the MIT license.\n","date":1607817600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1607817600,"objectID":"279b9966ca9cf3121ce924dca452bb1c","permalink":"https://site-cpyang.github.io/post/getting-started/","publishdate":"2020-12-13T00:00:00Z","relpermalink":"/post/getting-started/","section":"post","summary":"Welcome 👋 We know that first impressions are important, so we've populated your new site with some initial content to help you get familiar with everything in no time.","tags":["Academic","开源"],"title":"Welcome to Wowchemy, the website builder for Hugo","type":"post"},{"authors":null,"categories":["R"],"content":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nYou can embed an R code chunk like this:\nsummary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.:19.0 3rd Qu.: 56.00 ## Max. :25.0 Max. :120.00 fit \u0026lt;- lm(dist ~ speed, data = cars) fit ## ## Call: ## lm(formula = dist ~ speed, data = cars) ## ## Coefficients: ## (Intercept) speed ## -17.579 3.932 Including Plots You can also embed plots. See Figure 1 for example:\npar(mar = c(0, 1, 0, 1)) pie( c(280, 60, 20), c(\u0026#39;Sky\u0026#39;, \u0026#39;Sunny side of pyramid\u0026#39;, \u0026#39;Shady side of pyramid\u0026#39;), col = c(\u0026#39;#0292D8\u0026#39;, \u0026#39;#F7EA39\u0026#39;, \u0026#39;#C4B632\u0026#39;), init.angle = -50, border = NA ) Figure 1: A fancy pie chart.\n","date":1606875194,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1606875194,"objectID":"84a876ba789bb7232be8d9ed2487fd98","permalink":"https://site-cpyang.github.io/post/2020-12-01-r-rmarkdown/","publishdate":"2020-12-01T21:13:14-05:00","relpermalink":"/post/2020-12-01-r-rmarkdown/","section":"post","summary":"R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.","tags":["R Markdown","plot","regression"],"title":"Hello R Markdown","type":"post"},{"authors":null,"categories":null,"content":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.\nOn this page, you’ll find some examples of the types of technical content that can be rendered with Wowchemy.\nExamples Code Wowchemy supports a Markdown extension for highlighting code syntax. You can customize the styles under the syntax_highlighter option in your config/_default/params.yaml file.\n```python import pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() ``` renders as\nimport pandas as pd data = pd.read_csv(\u0026#34;data.csv\u0026#34;) data.head() Mindmaps Wowchemy supports a Markdown extension for mindmaps.\nSimply insert a Markdown markmap code block and optionally set the height of the mindmap as shown in the example below.\nA simple mindmap defined as a Markdown list:\n```markmap {height=\u0026#34;200px\u0026#34;} - Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal ``` renders as\n- Hugo Modules - wowchemy - wowchemy-plugins-netlify - wowchemy-plugins-netlify-cms - wowchemy-plugins-reveal A more advanced mindmap with formatting, code blocks, and math:\n```markmap - Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ ``` renders as\n- Mindmaps - Links - [Wowchemy Docs](https://wowchemy.com/docs/) - [Discord Community](https://discord.gg/z8wNYzb) - [GitHub](https://github.com/wowchemy/wowchemy-hugo-themes) - Features - Markdown formatting - **inline** ~~text~~ *styles* - multiline text - `inline code` - ```js console.log(\u0026#39;hello\u0026#39;); console.log(\u0026#39;code block\u0026#39;); ``` - Math: $x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}$ Charts Wowchemy supports the popular Plotly format for interactive charts.\nSave your Plotly JSON in your page folder, for example line-chart.json, and then add the {{\u0026lt; chart data=\u0026#34;line-chart\u0026#34; \u0026gt;}} shortcode where you would like the chart to appear.\nDemo:\nYou might also find the Plotly JSON Editor useful.\nMath Wowchemy supports a Markdown extension for $\\LaTeX$ math. You can enable this feature by toggling the math option in your config/_default/params.yaml file.\nTo render inline or block math, wrap your LaTeX math with {{\u0026lt; math \u0026gt;}}$...${{\u0026lt; /math \u0026gt;}} or {{\u0026lt; math \u0026gt;}}$$...$${{\u0026lt; /math \u0026gt;}}, respectively. (We wrap the LaTeX math in the Wowchemy math shortcode to prevent Hugo rendering our math as Markdown. The math shortcode is new in v5.5-dev.)\nExample math block:\n{{\u0026lt; math \u0026gt;}} $$ \\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2} $$ {{\u0026lt; /math \u0026gt;}} renders as\n$$\\gamma_{n} = \\frac{ \\left | \\left (\\mathbf x_{n} - \\mathbf x_{n-1} \\right )^T \\left [\\nabla F (\\mathbf x_{n}) - \\nabla F (\\mathbf x_{n-1}) \\right ] \\right |}{\\left \\|\\nabla F(\\mathbf{x}_{n}) - \\nabla F(\\mathbf{x}_{n-1}) \\right \\|^2}$$ Example inline math {{\u0026lt; math \u0026gt;}}$\\nabla F(\\mathbf{x}_{n})${{\u0026lt; /math \u0026gt;}} renders as $\\nabla F(\\mathbf{x}_{n})$.\nExample multi-line math using the math linebreak (\\\\):\n{{\u0026lt; math \u0026gt;}} $$f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases}$$ {{\u0026lt; /math \u0026gt;}} renders as\n$$ f(k;p_{0}^{*}) = \\begin{cases}p_{0}^{*} \u0026amp; \\text{if }k=1, \\\\ 1-p_{0}^{*} \u0026amp; \\text{if }k=0.\\end{cases} $$ Diagrams Wowchemy supports a Markdown extension for diagrams. You can enable this feature by toggling the diagram option in your config/_default/params.toml file or by adding diagram: true to your page front matter.\nAn example flowchart:\n```mermaid graph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] ``` renders as\ngraph TD A[Hard] --\u0026gt;|Text| B(Round) B --\u0026gt; C{Decision} C --\u0026gt;|One| D[Result 1] C --\u0026gt;|Two| E[Result 2] An example sequence diagram:\n```mermaid sequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! ``` renders as\nsequenceDiagram Alice-\u0026gt;\u0026gt;John: Hello John, how are you? loop Healthcheck John-\u0026gt;\u0026gt;John: Fight against hypochondria end Note right of John: Rational thoughts! John--\u0026gt;\u0026gt;Alice: Great! John-\u0026gt;\u0026gt;Bob: How about you? Bob--\u0026gt;\u0026gt;John: Jolly good! An example Gantt diagram:\n```mermaid gantt section Section Completed :done, des1, 2014-01-06,2014-01-08 Active :active, des2, 2014-01-07, 3d Parallel 1 : des3, after des1, 1d Parallel 2 : des4, after des1, 1d Parallel 3 : des5, after des3, 1d Parallel 4 : des6, after des4, 1d ``` renders …","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"07e02bccc368a192a0c76c44918396c3","permalink":"https://site-cpyang.github.io/post/writing-technical-content/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/writing-technical-content/","section":"post","summary":"Wowchemy is designed to give technical content creators a seamless experience. You can focus on the content and Wowchemy handles the rest.\nHighlight your code snippets, take notes on math classes, and draw diagrams from textual representation.","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Chao Péter Yang"],"categories":[],"content":"from IPython.core.display import Image Image(\u0026#39;https://www.python.org/static/community_logos/python-logo-master-v3-TM-flattened.png\u0026#39;) print(\u0026#34;Welcome to Academic!\u0026#34;) Welcome to Academic! Install Python and JupyterLab Install Anaconda which includes Python 3 and JupyterLab.\nAlternatively, install JupyterLab with pip3 install jupyterlab.\nCreate or upload a Jupyter notebook Run the following commands in your Terminal, substituting \u0026lt;MY-WEBSITE-FOLDER\u0026gt; and \u0026lt;SHORT-POST-TITLE\u0026gt; with the file path to your Academic website folder and a short title for your blog post (use hyphens instead of spaces), respectively:\nmkdir -p \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ cd \u0026lt;MY-WEBSITE-FOLDER\u0026gt;/content/post/\u0026lt;SHORT-POST-TITLE\u0026gt;/ jupyter lab index.ipynb The jupyter command above will launch the JupyterLab editor, allowing us to add Academic metadata and write the content.\nEdit your post metadata The first cell of your Jupter notebook will contain your post metadata (front matter).\nIn Jupter, choose Markdown as the type of the first cell and wrap your Academic metadata in three dashes, indicating that it is YAML front matter:\n--- title: My post\u0026#39;s title date: 2019-09-01 # Put any other Academic metadata here... --- Edit the metadata of your post, using the documentation as a guide to the available options.\nTo set a featured image, place an image named featured into your post’s folder.\nFor other tips, such as using math, see the guide on writing content with Academic.\nConvert notebook to Markdown jupyter nbconvert index.ipynb --to markdown --NbConvertApp.output_files_dir=. Example This post was created with Jupyter. The orginal files can be found at https://github.com/gcushen/hugo-academic/tree/master/exampleSite/content/post/jupyter\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1567641600,"objectID":"6e929dc84ed3ef80467b02e64cd2ed64","permalink":"https://site-cpyang.github.io/post/jupyter/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/post/jupyter/","section":"post","summary":"Learn how to blog in Academic using Jupyter notebooks","tags":[],"title":"Display Jupyter Notebooks with Academic","type":"post"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://site-cpyang.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"— abstract: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellusac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. address: city: Stanford country: United States postcode: “94305” region: CA street: 450 Serra Mall all_day: false authors: [] date: “2030-06-01T13:00:00Z” date_end: “2030-06-01T15:00:00Z” event: Wowchemy Conference event_url: https://example.org featured: false image: caption: ‘Image credit: Unsplash’ focal_point: Right links: - icon: twitter icon_pack: fab name: Follow url: https://twitter.com/georgecushen location: Wowchemy HQ projects: - example publishDate: “2017-01-01T00:00:00Z” slides: example summary: An example talk using Wowchemy’s Markdown slides feature. tags: [] title: Example Talk url_code: \u0026#34;\u0026#34; url_pdf: \u0026#34;\u0026#34; url_slides: \u0026#34;\u0026#34; url_video: \u0026#34;\u0026#34; — Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways: - Create slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file - Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file - Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page. ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://site-cpyang.github.io/talk/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/talk/","section":"event","summary":"— abstract: Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellusac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam.","tags":null,"title":"","type":"event"}]